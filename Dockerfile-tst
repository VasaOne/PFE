FROM  nvidia/cuda:12.3.1-base-ubuntu20.04 as image

RUN apt-get update

RUN apt-get install software-properties-common -y
RUN add-apt-repository ppa:deadsnakes/ppa -y

RUN apt-get  update
RUN apt-get install python3 python3-pip -y
RUN pip install setuptools==58.2.0
RUN python3 -m pip install -U vcstool
RUN apt-get install git -y

#install ros2
RUN locale

RUN apt-get update && apt-get install locales -y
RUN locale-gen en_US en_US.UTF-8
RUN update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
RUN LANG=en_US.UTF-8

RUN apt-get update && apt-get install curl -y
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt-get update -y && apt-get install -y \
  python3-flake8-docstrings \
  python3-pip \
  python3-pytest-cov \
  ros-dev-tools

RUN python3 -m pip install -U \
   flake8-blind-except \
   flake8-builtins \
   flake8-class-newline \
   flake8-comprehensions \
   flake8-deprecated \
   flake8-import-order \
   flake8-quotes \
   "pytest>=5.3" \
   pytest-repeat \
   pytest-rerunfailures

RUN mkdir -p ~/ros2_humble/src
WORKDIR ~/ros2_humble
RUN mkdir src
RUN vcs import --input https://raw.githubusercontent.com/ros2/ros2/humble/ros2.repos src

RUN python3 -m pip install -U rosdep
RUn ls
RUN apt upgrade -y
RUN rosdep init
RUN rosdep update
#RUN python3 -m pip install ultralytics
RUN pip install -U catkin-pkg-modules
RUN rosdep install --from-paths src --ignore-src -y --skip-keys "fastcdr rti-connext-dds-6.0.1 urdfdom_headers python3-catkin-pkg-modules "
# dont need rviz 
RUN rm -r /~/ros2_humble/src/ros2/rviz
RUN colcon build --symlink-install

RUN pip3 install lap lapx
	
RUN pip3 install ultralytics \
	opencv-python 

#install ros2_project
RUN apt-get install libboost-all-dev libopencv-dev ros-humble-cv-bridge -y

WORKDIR ..
RUN mkdir -p ~/workspace/ros2_ws/src
WORKDIR workspace/ros2_ws
COPY best.pt .
WORKDIR src
COPY src/PFE/ .
RUN git clone https://github.com/ros-perception/vision_opencv.git




